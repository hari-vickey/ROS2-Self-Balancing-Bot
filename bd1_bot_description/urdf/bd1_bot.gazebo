<?xml version="1.0" ?>
<robot name="bd1_bot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<material name="Orange">
  <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
</material>

<xacro:property name="body_color" value="Gazebo/Blue" />
<xacro:property name="part_color" value="Gazebo/Red" />
<xacro:property name="ear_color" value="Gazebo/Green" />
<xacro:property name="antenna_color" value="Gazebo/Orange" />
<xacro:property name="tyre_color" value="Gazebo/Black" />
<xacro:property name="rim_color" value="Gazebo/Yellow" />

<gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <!-- Plugin update rate in Hz -->
    <update_rate>100</update_rate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <left_joint>left_wheel_joint</left_joint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <right_joint>right_wheel_joint</right_joint>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <max_wheel_torque>20</max_wheel_torque>

    <!-- Odometry frame, defaults to `odom` -->
    <odometry_frame>odom</odometry_frame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <!-- <odometrySource>1</odometrySource> -->

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <!-- <publishWheelTF>true</publishWheelTF> -->

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publish_odom>true</publish_odom>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <!-- <legacyMode>false</legacyMode> -->
  </plugin>
</gazebo>

<gazebo reference="head_1">
    <sensor name="rplidar_a3" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0 0 0 0 0 0</pose>
        <update_rate>100</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>667</samples>
              <resolution>0.54</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>20</max>
            <resolution>0.54</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="bytes_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
              <namespace>lidar</namespace>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>head</frame_name>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="fake_camera_1">
  <sensor type="camera" name="ov_camera">
    <update_rate>60</update_rate>
    <visualize>false</visualize>
    <camera name="head">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>100</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <remapping>image_raw:=image</remapping>
      </ros>
    </plugin>
  </sensor>
</gazebo>

<gazebo reference="base_link">
  <material>${rim_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="left_top_leg_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_top_leg_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_top_leg_part_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_top_leg_part_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_bottom_leg_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_bottom_leg_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_bottom_leg_part1_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_bottom_leg_part2_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_bottom_leg_part1_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_bottom_leg_part2_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_motor_1">
  <material>${antenna_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_motor_1">
  <material>${antenna_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_wheel_1">
  <material>${rim_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_wheel_1">
  <material>${rim_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_tyre_1">
  <material>${tyre_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_tyre_1">
  <material>${tyre_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="head_connector_1">
  <material>${antenna_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="head_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_antenna_1">
  <material>${antenna_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_antenna_1">
  <material>${antenna_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="head_protector_1">
  <material>${ear_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="head_display_1">
  <material>${ear_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_ear_1">
  <material>${rim_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_ear_1">
  <material>${rim_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_eye_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="right_eye_ball_1">
  <material>${tyre_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_eye_1">
  <material>${part_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="left_eye_ball_1">
  <material>${tyre_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="ov_camera_1">
  <material>${ear_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

</robot>
